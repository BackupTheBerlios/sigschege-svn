# hey emacs, it's -*- python -*-
# $Id$
# first example timing diagram creation script for sigschege

from sigschege_addon import *

md = Sigschege.TimingDiagram(0.0, 40.0)

mlbl = md.createLabel("Changing order of signals")
mclk = md.createSignal(label="Clock", isBus=0, defaultSlope=0.0)
mack = md.createSignal("Acknowledge", 0, 0.4)
mdt = md.createSignal("Data", 1, 0.4)
mts = md.createTimescale()

mrq = md.createSignal(label="Request", isBus=0, defaultSlope=0.4, before=mack)


mts.setLabel('Time', '[ns]')
mts.setFont(18)

markers = []
for i in range(-10,40,4):
   mclk.addEvent(i, "1")
   mclk.addEvent(state="0", time=i+2)
   if i>0:
      tm1 = md.createTimemarker(i, mlbl, mts)
      tm1.setColor(i%3)
      tm1.setTimLabelFont(8+i/4, i/4)
      tm1.setTextLabelFont(size=12, type=0)
      tm1.setLabels(Pos=5.5/6)
      markers.append(tm1)

markers[1].setLabels(Text="Data")
markers[2].setLabels(Text="Ack", showTime=0)

mdt.addEvent(-20, "X")

request_rise = mrq.addEvent(5, "1")
data_available = mclk.getEvent(after=request_rise.getTime(100), newState="1", percentageLevel=100).getTime(100)
mdt.addEvent(data_available, "D1")
ack_available = mclk.getEvent(after=data_available+1, newState="1", percentageLevel=100).getTime(100)
mack.addEvent(ack_available, "1")


mrq.addEvent(15, "0")
mack.addEvent(20, "0")
mdt.addEvent(20, "X")



md.exportFig("datatrans.fig")
md.exportPic("datatrans.png", "png")

show(md)

md.setTimeRange(0, 25)

show(md)

mlbl.setText("Timescale is now above this label")
md.moveElement(mts, mlbl) # move timescale in front of label

show(md)

mlbl.setText("Timescale is now at the bottom again", "Good bye!")
md.moveElement(mts)

show(md)
